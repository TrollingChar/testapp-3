
Нотация, которую будем использовать:




Пробелы вместо табов, отступ - 4 пробела.


Все классы делаем public. Все классы должны быть в пространстве имен W3.
Было:
class RNG {
}
Стало:
namespace W3 {
    class RNG {
    }
}


Там, где нет модификатора доступа - ставим private, в том числе у полей.
Было:
void Awake() {
}
Стало:
private void Awake() {
}
Вместо internal ставим public.
static или override идет после public/protected/private.


В классах сначала идут константы, потом статические поля, потом обычные поля, потом конструктор,
потом свойства (get, set), потом методы, потом деструктор (сейчас его нет нигде так что похуй).
Написание как здесь:
Пример:
class Class {
    public const int one = 1;
    protected static int _two = 2;
    private int _three;
    // константы и поля имеют нижнее подчеркивание если они не public

    public Class() {
        _three = 3;
    }

    public static int two { get { return _two; } }

    public int three {
        get { return _three; }
        set {
            if (value != 3) throw new InvalidArgumentException();
            _three = value;
        }
    }

    public int Four() {
        return 4;
    }
}
Не используем word_word и WORD_WORD - используем wordWord и WordWord.


Если у условия или цикла всего одна строчка кода - оставляем на той же строке без фигурных скобок.
Если нет, переносим и ставим скобки, даже если там 1 оператор.


Все конструкции вида
    if (y == null) x = z;
    else x = y;
или
    x = (y == null) ? z : y;
заменяем на такую:
    x = y ?? z;


Если вызов функции занимает несколько строк, пишем его так:
InvokeFunction(
    firstIncrediblyLongExpression,
    InvokeAnotherFunction(
        secondIncrediblyLongExpression,
        thirdIncrediblyLongExpression
    ),
    omgTheyAreStillGoing
);
Если там постоянно параметры через точку, то так:
InvokeFunction(...)
.InvokeAnotherFunction(
    // many params there
).DoSomething()
.DoSomething();


В объявлении метода после имени перед скобками есть пробел.


Все остальное - спрашивай так.